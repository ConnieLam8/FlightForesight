# basic decision tree regression code 
import pandas as pd
from sklearn.tree import DecisionTreeRegressor
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.metrics import mean_squared_error, r2_score

# Load your dataset (replace with your actual dataset)
data = pd.read_csv("NUMERICAL_DATA_final_with_outliers_with_weather.csv")

# FeaturesX to keep
featuresX = ["Year", "Month", "DayofMonth", "OriginAirportID", "DestAirportID",
               "CRS_ARR_TIME", "CRS_DEP_TIME", "DISTANCE", "CRS_ELAPSED_TIME", "route_delay_rank"]

# Select features and target variable
X = data[featuresX].copy()
y = data["ARR_DELAY"]

# Split data
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Apply Standard Scaler
scaler = StandardScaler()
X_train = scaler.fit_transform(X_train)
X_test = scaler.transform(X_test)

# Train the Random Forest Regressor
regressor = DecisionTreeRegressor(max_depth=10, min_samples_split=10, min_samples_leaf=5, random_state=0)
regressor.fit(X_train, y_train)

# Evaluate the model
predictions = regressor.predict(X_test)
r2 = r2_score(y_test, predictions)
print(f'R-squared: {r2}')
